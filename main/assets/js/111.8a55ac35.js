(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{629:function(e,t,a){"use strict";a.r(t);var s=a(1),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"adr-050-sign-mode-textual-annex-1-value-renderers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#adr-050-sign-mode-textual-annex-1-value-renderers"}},[e._v("#")]),e._v(" ADR 050: SIGN_MODE_TEXTUAL: Annex 1 Value Renderers")]),e._v(" "),a("h2",{attrs:{id:"changelog"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}},[e._v("#")]),e._v(" Changelog")]),e._v(" "),a("ul",[a("li",[e._v("Dec 06, 2021: Initial Draft")]),e._v(" "),a("li",[e._v("Feb 07, 2022: Draft read and concept-ACKed by the Ledger team.")])]),e._v(" "),a("h2",{attrs:{id:"status"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#status"}},[e._v("#")]),e._v(" Status")]),e._v(" "),a("p",[e._v("Accepted. Implementation started. Small value renderers details still need to be polished.")]),e._v(" "),a("h2",{attrs:{id:"abstract"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abstract"}},[e._v("#")]),e._v(" Abstract")]),e._v(" "),a("p",[e._v("This Annex describes value renderers, which are used for displaying Protobuf values in a human-friendly way using a string array.")]),e._v(" "),a("h2",{attrs:{id:"value-renderers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#value-renderers"}},[e._v("#")]),e._v(" Value Renderers")]),e._v(" "),a("p",[e._v("Value Renderers describe how values of different Protobuf types should be encoded as a string array. Value renderers can be formalized as a set of bijective functions "),a("code",[e._v("func renderT(value T) []string")]),e._v(", where "),a("code",[e._v("T")]),e._v(" is one of the below Protobuf types for which this spec is defined.")]),e._v(" "),a("h3",{attrs:{id:"protobuf-number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#protobuf-number"}},[e._v("#")]),e._v(" Protobuf "),a("code",[e._v("number")])]),e._v(" "),a("ul",[a("li",[e._v("Applies to:\n"),a("ul",[a("li",[e._v("protobuf numeric integer types ("),a("code",[e._v("int{32,64}")]),e._v(", "),a("code",[e._v("uint{32,64}")]),e._v(", "),a("code",[e._v("sint{32,64}")]),e._v(", "),a("code",[e._v("fixed{32,64}")]),e._v(", "),a("code",[e._v("sfixed{32,64}")]),e._v(")")]),e._v(" "),a("li",[e._v("strings whose "),a("code",[e._v("customtype")]),e._v(" is "),a("code",[e._v("github.com/cosmos/cosmos-sdk/types.Int")]),e._v(" or "),a("code",[e._v("github.com/cosmos/cosmos-sdk/types.Dec")])]),e._v(" "),a("li",[e._v("bytes whose "),a("code",[e._v("customtype")]),e._v(" is "),a("code",[e._v("github.com/cosmos/cosmos-sdk/types.Int")]),e._v(" or "),a("code",[e._v("github.com/cosmos/cosmos-sdk/types.Dec")])])])]),e._v(" "),a("li",[e._v("Trailing decimal zeroes are always removed")]),e._v(" "),a("li",[e._v("Formatting with "),a("code",[e._v("'")]),e._v("s for every three integral digits.")]),e._v(" "),a("li",[e._v("Usage of "),a("code",[e._v(".")]),e._v(" to denote the decimal delimiter.")])]),e._v(" "),a("h4",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("1000")]),e._v(" (uint64) -> "),a("code",[e._v("1'000")])]),e._v(" "),a("li",[a("code",[e._v('"1000000.00"')]),e._v(" (string representing a Dec) -> "),a("code",[e._v("1'000'000")])]),e._v(" "),a("li",[a("code",[e._v('"1000000.10"')]),e._v(" (string representing a Dec) -> "),a("code",[e._v("1'000'000.1")])])]),e._v(" "),a("h3",{attrs:{id:"coin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#coin"}},[e._v("#")]),e._v(" "),a("code",[e._v("coin")])]),e._v(" "),a("ul",[a("li",[e._v("Applies to "),a("code",[e._v("cosmos.base.v1beta1.Coin")]),e._v(".")]),e._v(" "),a("li",[e._v("Denoms are converted to "),a("code",[e._v("display")]),e._v(" denoms using "),a("code",[e._v("Metadata")]),e._v(" (if available). "),a("strong",[e._v("This requires a state query")]),e._v(". The definition of "),a("code",[e._v("Metadata")]),e._v(" can be found in the "),a("a",{attrs:{href:"https://github.com/cosmos/cosmos-sdk/blob/v0.46.0-rc1/proto/cosmos/bank/v1beta1/bank.proto#L79-L108",target:"_blank",rel:"noopener noreferrer"}},[e._v("bank Protobuf definition"),a("OutboundLink")],1),e._v(". If the "),a("code",[e._v("display")]),e._v(" field is empty or nil, then we do not perform any denom conversion.")]),e._v(" "),a("li",[e._v("Amounts are converted to "),a("code",[e._v("display")]),e._v(" denom amounts and rendered as "),a("code",[e._v("number")]),e._v("s above\n"),a("ul",[a("li",[e._v("We do not change the capitalization of the denom. In practice, "),a("code",[e._v("display")]),e._v(" denoms are stored in lowercase in state (e.g. "),a("code",[e._v("10 atom")]),e._v("), however they are often showed in UPPERCASE in everyday life (e.g. "),a("code",[e._v("10 ATOM")]),e._v("). Value renderers keep the case used in state, but we may recommend chains changing the denom metadata to be uppercase for better user display.")])])]),e._v(" "),a("li",[e._v("One space between the denom and amount (e.g. "),a("code",[e._v("10 atom")]),e._v(").")]),e._v(" "),a("li",[e._v("In the future, IBC denoms could maybe be converted to DID/IIDs, if we can find a robust way for doing this (ex. "),a("code",[e._v("cosmos:cosmos:hub:bank:denom:atom")]),e._v(")")])]),e._v(" "),a("h4",{attrs:{id:"examples-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples-2"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("1000000000uatom")]),e._v(" -> "),a("code",[e._v('["1\'000 atom"]')]),e._v(", because atom is the metadata's display denom.")])]),e._v(" "),a("h3",{attrs:{id:"coins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#coins"}},[e._v("#")]),e._v(" "),a("code",[e._v("coins")])]),e._v(" "),a("ul",[a("li",[e._v("an array of "),a("code",[e._v("coin")]),e._v(" is display as the concatenation of each "),a("code",[e._v("coin")]),e._v(" encoded as the specification above, the joined together with the delimiter "),a("code",[e._v('", "')]),e._v(" (a comma and a space, no quotes around).")]),e._v(" "),a("li",[e._v("the list of coins is ordered by unicode code point of the display denom: "),a("code",[e._v("A-Z")]),e._v(" < "),a("code",[e._v("a-z")]),e._v(". For example, the string "),a("code",[e._v("aAbBcC")]),e._v(" would be sorted "),a("code",[e._v("ABCabc")]),e._v(".")])]),e._v(" "),a("h3",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("ul",[a("li",[a("code",[e._v('["3cosm", "2000000uatom"]')]),e._v(" -> "),a("code",[e._v("2 atom, 3 COSM")]),e._v(" (assuming the display denoms are "),a("code",[e._v("atom")]),e._v(" and "),a("code",[e._v("COSM")]),e._v(")")]),e._v(" "),a("li",[a("code",[e._v('["10atom", "20Acoin"]')]),e._v(" -> "),a("code",[e._v("20 Acoin, 10 atom")]),e._v(" (assuming the display denoms are "),a("code",[e._v("atom")]),e._v(" and "),a("code",[e._v("Acoin")]),e._v(")")])]),e._v(" "),a("h3",{attrs:{id:"repeated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repeated"}},[e._v("#")]),e._v(" "),a("code",[e._v("repeated")])]),e._v(" "),a("ul",[a("li",[e._v("Applies to all "),a("code",[e._v("repeated")]),e._v(" fields, except "),a("code",[e._v("cosmos.tx.v1beta1.TxBody#Messages")]),e._v(", which has a particular encoding (see "),a("RouterLink",{attrs:{to:"/architecture/adr-050-sign-mode-textual.html"}},[e._v("ADR-050")]),e._v(").")],1),e._v(" "),a("li",[e._v("A repeated type has the following template:")])]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"Jmx0O21lc3NhZ2VfbmFtZSZndDsgaGFzICZsdDtpbnQmZ3Q7ICZsdDtmaWVsZF9uYW1lJmd0OwombHQ7ZmllbGRfbmFtZSZndDsgKCZsdDtpbnQmZ3Q7LyZsdDtpbnQmZ3Q7KTogJmx0O3ZhbHVlIHJlbmRlcmVkIDFzdCBsaW5lJmd0OwombHQ7b3B0aW9uYWwgdmFsdWUgcmVuZGVyZWQgaW4gdGhlIG5leHQgbGluZXMmZ3Q7CiZsdDtmaWVsZF9uYW1lJmd0OyAoJmx0O2ludCZndDsvJmx0O2ludCZndDspOiAmbHQ7dmFsdWUgcmVuZGVyZWQgMXN0IGxpbmUmZ3Q7CiZsdDtvcHRpb25hbCB2YWx1ZSByZW5kZXJlZCBpbiB0aGUgbmV4dCBsaW5lcyZndDsKRW5kIG9mICZsdDtmaWVsZF9uYW1lJmd0Oy4K"}}),e._v(" "),a("p",[e._v("where:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("message_name")]),e._v(" is the name of the Protobuf message which holds the "),a("code",[e._v("repeated")]),e._v(" field,")]),e._v(" "),a("li",[a("code",[e._v("int")]),e._v(" is the length of the array,")]),e._v(" "),a("li",[a("code",[e._v("field_name")]),e._v(" is the Protobuf field name of the repeated field,\n"),a("ul",[a("li",[e._v("add an optional "),a("code",[e._v("s")]),e._v(" at the end if "),a("code",[e._v("<int> > 1")]),e._v(" and the "),a("code",[e._v("field_name")]),e._v(" doesn't already end with "),a("code",[e._v("s")]),e._v(".")])])])]),e._v(" "),a("h4",{attrs:{id:"examples-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples-3"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("p",[e._v("Given the proto definition:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"proto",base64:"bWVzc2FnZSBBbGxvd2VkTXNnQWxsb3dhbmNlIHsKICByZXBlYXRlZCBzdHJpbmcgYWxsb3dlZF9tZXNzYWdlcyA9IDE7Cn0K"}}),e._v(" "),a("p",[e._v("and initializing with:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"eCA6PSBbXUFsbG93ZWRNc2dBbGxvd2FuY2V7JnF1b3Q7Y29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kJnF1b3Q7LCAmcXVvdDtjb3Ntb3MuZ292LnYxLk1zZ1ZvdGUmcXVvdDt9Cg=="}}),e._v(" "),a("p",[e._v("we have the following value-rendered encoding:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"QWxsb3dlZCBtZXNzYWdlczogMiBzdHJpbmdzCkFsbG93ZWQgbWVzc2FnZXMgKDEvMik6IGNvc21vcy5iYW5rLnYxYmV0YTEuTXNnU2VuZApBbGxvd2VkIG1lc3NhZ2VzICgyLzIpOiBjb3Ntb3MuZ292LnYxLk1zZ1ZvdGUKRW5kIG9mIEFsbG93ZWQgbWVzc2FnZXMK"}}),e._v(" "),a("h3",{attrs:{id:"message"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#message"}},[e._v("#")]),e._v(" "),a("code",[e._v("message")])]),e._v(" "),a("ul",[a("li",[e._v("Applies to Protobuf messages whose name does not start with "),a("code",[e._v("Msg")]),e._v(" "),a("ul",[a("li",[e._v("For "),a("code",[e._v("sdk.Msg")]),e._v("s, please see "),a("RouterLink",{attrs:{to:"/architecture/adr-050-sign-mode-textual.html"}},[e._v("ADR-050")])],1),e._v(" "),a("li",[e._v("alternatively, we can decide to add a protobuf option to denote messages that are "),a("code",[e._v("sdk.Msg")]),e._v("s.")])])]),e._v(" "),a("li",[e._v("Field names follow "),a("a",{attrs:{href:"https://en.wiktionary.org/wiki/sentence_case",target:"_blank",rel:"noopener noreferrer"}},[e._v("sentence case"),a("OutboundLink")],1),e._v(" "),a("ul",[a("li",[e._v("replace "),a("code",[e._v("_")]),e._v(" with a spaces")]),e._v(" "),a("li",[e._v("capitalize first letter of the setence")])])]),e._v(" "),a("li",[e._v("Field names are ordered by their Protobuf field number")]),e._v(" "),a("li",[e._v("Nesting:\n"),a("ul",[a("li",[e._v("if a field contains a nested message, we value-render the underlying message using the template:")])]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"Jmx0O2ZpZWxkX25hbWUmZ3Q7OiAmbHQ7MXN0IGxpbmUgb2YgdmFsdWUtcmVuZGVyZWQgbWVzc2FnZSZndDsKJmd0OyAmbHQ7bGluZXMgMi1uIG9mIHZhbHVlLXJlbmRlcmVkIG1lc3NhZ2UmZ3Q7ICAgICAgICAgICAgIC8vIE5vdGljZSB0aGUgYCZndDtgIHByZWZpeC4K"}}),e._v(" "),a("ul",[a("li",[a("code",[e._v(">")]),e._v(" character is used to denote nesting. For each additional level of nesting, add "),a("code",[e._v(">")]),e._v(".")])])],1)]),e._v(" "),a("h4",{attrs:{id:"examples-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples-4"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("p",[e._v("Given the following Protobuf messages:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"proto",base64:"ZW51bSBWb3RlT3B0aW9uIHsKICBWT1RFX09QVElPTl9VTlNQRUNJRklFRCA9IDA7CiAgVk9URV9PUFRJT05fWUVTID0gMTsKICBWT1RFX09QVElPTl9BQlNUQUlOID0gMjsKICBWT1RFX09QVElPTl9OTyA9IDM7CiAgVk9URV9PUFRJT05fTk9fV0lUSF9WRVRPID0gNDsKfQoKbWVzc2FnZSBXZWlnaHRlZFZvdGVPcHRpb24gewogIFZvdGVPcHRpb24gb3B0aW9uID0gMTsKICBzdHJpbmcgICAgIHdlaWdodCA9IDIgWyhjb3Ntb3NfcHJvdG8uc2NhbGFyKSA9ICZxdW90O2Nvc21vcy5EZWMmcXVvdDtdOwp9CgptZXNzYWdlIFZvdGUgewogIHVpbnQ2NCBwcm9wb3NhbF9pZCA9IDE7CiAgc3RyaW5nIHZvdGVyICAgICAgID0gMiBbKGNvc21vc19wcm90by5zY2FsYXIpID0gJnF1b3Q7Y29zbW9zLkFkZHJlc3NTdHJpbmcmcXVvdDtdOwogIHJlc2VydmVkIDM7CiAgcmVwZWF0ZWQgV2VpZ2h0ZWRWb3RlT3B0aW9uIG9wdGlvbnMgPSA0Owp9Cg=="}}),e._v(" "),a("p",[e._v("we get the following encoding for the "),a("code",[e._v("Vote")]),e._v(" message:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"Vm90ZSBvYmplY3QKJmd0OyBQcm9wb3NhbCBpZDogNAomZ3Q7IFZvdGU6IGNvc21vczFhYmMuLi5kZWYKJmd0OyBPcHRpb25zOiAyIFdlaWdodGVkVm90ZU9wdGlvbnMKJmd0OyBPcHRpb25zICgxLzIpOiBXZWlnaHRlZFZvdGVPcHRpb24gb2JqZWN0CiZndDsmZ3Q7IE9wdGlvbjogWWVzCiZndDsmZ3Q7IFdlaWdodDogMC43CiZndDsgT3B0aW9ucyAoMi8yKTogV2VpZ2h0ZWRWb3RlT3B0aW9uIG9iamVjdAomZ3Q7Jmd0OyBPcHRpb246IE5vCiZndDsmZ3Q7IFdlaWdodDogMC4zCiZndDsgRW5kIG9mIE9wdGlvbnMK"}}),e._v(" "),a("h3",{attrs:{id:"enums"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enums"}},[e._v("#")]),e._v(" Enums")]),e._v(" "),a("ul",[a("li",[e._v("String case convention: snake case to sentence case")]),e._v(" "),a("li",[e._v("Allow optional annotation for textual name (TBD)")]),e._v(" "),a("li",[e._v("Algorithm:\n"),a("ul",[a("li",[e._v("convert enum name ("),a("code",[e._v("VoteOption")]),e._v(") to snake_case ("),a("code",[e._v("VOTE_OPTION")]),e._v(")")]),e._v(" "),a("li",[e._v("truncate that prefix + "),a("code",[e._v("_")]),e._v(" from the enum name if it exists ("),a("code",[e._v("VOTE_OPTION_")]),e._v(" gets stripped from "),a("code",[e._v("VOTE_OPTION_YES")]),e._v(" -> "),a("code",[e._v("YES")]),e._v(")")]),e._v(" "),a("li",[e._v("convert rest to sentence case: "),a("code",[e._v("YES")]),e._v(" -> "),a("code",[e._v("Yes")])]),e._v(" "),a("li",[e._v("in summary: "),a("code",[e._v("VOTE_OPTION_YES")]),e._v(" -> "),a("code",[e._v("Yes")])])])])]),e._v(" "),a("h4",{attrs:{id:"examples-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples-5"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("p",[e._v("See example above with "),a("code",[e._v("message Vote{}")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"google-protobuf-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#google-protobuf-any"}},[e._v("#")]),e._v(" "),a("code",[e._v("google.protobuf.Any")])]),e._v(" "),a("ul",[a("li",[e._v("Applies to "),a("code",[e._v("google.protobuf.Any")])]),e._v(" "),a("li",[e._v("Rendered as:")])]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"T2JqZWN0OiAmbHQ7dHlwZV91cmwmZ3Q7CiZndDsgJmx0O3ZhbHVlIHJlbmRlcmVkIHVuZGVybHlpbmcgbWVzc2FnZSZndDsK"}}),e._v(" "),a("h4",{attrs:{id:"examples-6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples-6"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"T2JqZWN0OiAvY29zbW9zLmdvdi52MS5Wb3RlCiZndDsgUHJvcG9zYWwgaWQ6IDQKJmd0OyBWb3RlOiBjb3Ntb3MxYWJjLi4uZGVmCiZndDsgT3B0aW9uczogMiBXZWlnaHRlZFZvdGVPcHRpb25zCiZndDsgT3B0aW9ucyAoMS8yKTogV2VpZ2h0ZWRWb3RlT3B0aW9uIG9iamVjdAomZ3Q7Jmd0OyBPcHRpb246IFllcwomZ3Q7Jmd0OyBXZWlnaHQ6IDAuNwomZ3Q7IE9wdGlvbnMgKDIvMik6IFdlaWdodGVkVm90ZU9wdGlvbiBvYmplY3QKJmd0OyZndDsgT3B0aW9uOiBObwomZ3Q7Jmd0OyBXZWlnaHQ6IDAuMwomZ3Q7IEVuZCBvZiBPcHRpb25zCg=="}}),e._v(" "),a("h3",{attrs:{id:"google-protobuf-timestamp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#google-protobuf-timestamp"}},[e._v("#")]),e._v(" "),a("code",[e._v("google.protobuf.Timestamp")])]),e._v(" "),a("p",[e._v("Rendered as either ISO8601 ("),a("code",[e._v("2021-01-01T12:00:00Z")]),e._v(").")]),e._v(" "),a("h3",{attrs:{id:"google-protobuf-duration-todo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#google-protobuf-duration-todo"}},[e._v("#")]),e._v(" "),a("code",[e._v("google.protobuf.Duration")]),e._v(" (TODO)")]),e._v(" "),a("ul",[a("li",[e._v("rendered in terms of weeks, days, hours, minutes and seconds as these time units can be measured independently of any calendar and duration values are in seconds (so months and years can't be used precisely)")]),e._v(" "),a("li",[e._v("total seconds values included at the end so users have both pieces of information")]),e._v(" "),a("li",[e._v("Ex:\n"),a("ul",[a("li",[a("code",[e._v("1483530 seconds")]),e._v(" -> "),a("code",[e._v("2 weeks, 3 days, 4 hours, 5 minutes, 30 seconds (1483530 seconds total)")])])])])]),e._v(" "),a("h3",{attrs:{id:"bytes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bytes"}},[e._v("#")]),e._v(" bytes")]),e._v(" "),a("ul",[a("li",[e._v("Bytes are rendered in base64.")])]),e._v(" "),a("h3",{attrs:{id:"address-bytes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#address-bytes"}},[e._v("#")]),e._v(" address bytes")]),e._v(" "),a("p",[e._v("We currently use "),a("code",[e._v("string")]),e._v(" types in protobuf for addresses so this may not be needed, but if any address bytes are used in sign mode textual they should be rendered with bech32 formatting")]),e._v(" "),a("h3",{attrs:{id:"strings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strings"}},[e._v("#")]),e._v(" strings")]),e._v(" "),a("p",[e._v("Strings are rendered as-is.")]),e._v(" "),a("h3",{attrs:{id:"default-values"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#default-values"}},[e._v("#")]),e._v(" Default Values")]),e._v(" "),a("ul",[a("li",[e._v("Default Protobuf values for each field are skipped.")])]),e._v(" "),a("h4",{attrs:{id:"example-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-2"}},[e._v("#")]),e._v(" Example")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"proto",base64:"bWVzc2FnZSBUZXN0RGF0YSB7CiAgc3RyaW5nIHNpZ25lciA9IDE7CiAgc3RyaW5nIG1ldGFkYXRhID0gMjsKfQo="}}),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"bXlUZXN0RGF0YSA6PSBUZXN0RGF0YXsKICBTaWduZXI6ICZxdW90O2Nvc21vczFhYmMmcXVvdDsKfQo="}}),e._v(" "),a("p",[e._v("We get the following encoding for the "),a("code",[e._v("TestData")]),e._v(" message:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"VGVzdERhdGEgb2JqZWN0CiZndDsgU2lnbmVyOiBjb3Ntb3MxYWJjCg=="}}),e._v(" "),a("h3",{attrs:{id:"abandoned-custom-msg-title-instead-of-msg-type-url"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#abandoned-custom-msg-title-instead-of-msg-type-url"}},[e._v("#")]),e._v(" [ABANDONED] Custom "),a("code",[e._v("msg_title")]),e._v(" instead of Msg "),a("code",[e._v("type_url")])]),e._v(" "),a("p",[a("em",[e._v("This paragraph is in the Annex for informational purposes only, and will be removed in a next update of the ADR.")])]),e._v(" "),a("details",[a("summary",[e._v("Click to see abandoned idea.")]),e._v(" "),a("ul",[a("li",[e._v("all protobuf messages to be used with "),a("code",[e._v("SIGN_MODE_TEXTUAL")]),e._v(" CAN have a short title associated with them that can be used in format strings whenever the type URL is explicitly referenced via the "),a("code",[e._v("cosmos.msg.v1.textual.msg_title")]),e._v(" Protobuf message option.")]),e._v(" "),a("li",[e._v("if this option is not specified for a Msg, then the Protobuf fully qualified name will be used.")])]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"proto",base64:"bWVzc2FnZSBNc2dTZW5kIHsKICBvcHRpb24gKGNvc21vcy5tc2cudjEudGV4dHVhbC5tc2dfdGl0bGUpID0gJnF1b3Q7YmFuayBzZW5kIGNvaW5zJnF1b3Q7Owp9Cg=="}}),e._v(" "),a("ul",[a("li",[e._v("they MUST be unique per message, per chain")])]),e._v(" "),a("h4",{attrs:{id:"examples-7"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples-7"}},[e._v("#")]),e._v(" Examples")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("cosmos.gov.v1.MsgVote")]),e._v(" -> "),a("code",[e._v("governance v1 vote")])])]),e._v(" "),a("h4",{attrs:{id:"best-pratices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#best-pratices"}},[e._v("#")]),e._v(" Best Pratices")]),e._v(" "),a("p",[e._v("We recommend to use this option only for "),a("code",[e._v("Msg")]),e._v("s whose Protobuf fully qualified name can be hard to understand. As such, the two examples above ("),a("code",[e._v("MsgSend")]),e._v(" and "),a("code",[e._v("MsgVote")]),e._v(") are not good examples to be used with "),a("code",[e._v("msg_title")]),e._v(". We still allow "),a("code",[e._v("msg_title")]),e._v(" for chains who might have "),a("code",[e._v("Msg")]),e._v("s with complex or non-obvious names.")]),e._v(" "),a("p",[e._v("In those cases, we recommend to drop the version (e.g. "),a("code",[e._v("v1")]),e._v(") in the string if there's only one version of the module on chain. This way, the bijective mapping can figure out which message each string corresponds to. If multiple Protobuf versions of the same module exist on the same chain, we recommend keeping the first "),a("code",[e._v("msg_title")]),e._v(" with version, and the second "),a("code",[e._v("msg_title")]),e._v(" with version (e.g. "),a("code",[e._v("v2")]),e._v("):")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("mychain.mymodule.v1.MsgDo")]),e._v(" -> "),a("code",[e._v("mymodule do something")])]),e._v(" "),a("li",[a("code",[e._v("mychain.mymodule.v2.MsgDo")]),e._v(" -> "),a("code",[e._v("mymodule v2 do something")])])])],1)],1)}),[],!1,null,null,null);t.default=o.exports}}]);